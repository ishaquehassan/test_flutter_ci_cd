# This is a basic workflow to help you get started with Actions
name: CD Production-Fast-Lane
# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch..
on:
  push:
    #tags:
     # - "internal-v*.*.*" # on every version tag will build a new android artifact example: v3.1.2+6
    branches:
      - master
jobs:
  build:
    name: Build Artifacts and Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: "8.x"
      - name: Setup Flutter
        uses: subosito/flutter-action@v1
        with:
          flutter-version: "2.6.0-11.0.pre"
          channel: 'dev'
          
      #- name: Decode android/key.properties
      #  run: echo "${{ secrets.KEY_PROPERTIES_PROD }}" | base64 --decode > android/key.properties

      #- name: Decode android/neumodore_key.jks
      #  run: echo "${{ secrets.KEYSTORE_JKS_PROD }}" | base64 --decode > android/key.jks
      
      - name: Pub Get Packages
        run: flutter pub get

      - name: Build APPBUNDLE
        run: flutter build appbundle --release && flutter build apk --release

      - name: Create Github Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/bundle/release/*.aab,build/app/outputs/flutter-apk/app-release.apk"
          token: ${{ secrets.GH_TOKEN }}
          tag: ${{ github.event.head_commit.message }}

      - name: Save APPBUNDLE to Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: APPBUNDLE
          path: build/app/outputs/bundle/release/app-release.aab
  release_internal:
    name: Release Artifacts to internal track
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Get APPBUNDLE from Artifacts
        uses: actions/download-artifact@v2
        with:
          name: APPBUNDLE
      - name: Release APPBUNDLE to internal track
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAYSTORE_ACCOUNT_KEY }}
          packageName: com.flutter.cicd.test
          releaseFiles: app-release.aab
          track: production
          whatsNewDirectory: distribution/whatsnew
          status: draft
