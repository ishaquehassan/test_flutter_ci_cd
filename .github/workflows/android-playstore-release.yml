name: CD Production-Lane
# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch.
on:
  push:
    branches:
      - masters
jobs:
  build:
    name: Build Artifacts and Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: "8.x"
      - name: Setup Flutter
        uses: subosito/flutter-action@v1
        with:
          flutter-version: "2.6.0-11.0.pre"
          channel: 'dev'
          
      - name: Decode android/key.properties
        run: echo "${{ secrets.KEY_PROPERTIES_PROD }}" | base64 --decode > android/key.properties

      - name: Decode android/neumodore_key.jks
        run: echo "${{ secrets.KEYSTORE_JKS_PROD }}" | base64 --decode > android/key.jks
      
      - name: Pub Get Packages
        run: flutter pub get

      - name: Build APPBUNDLE
        run: flutter build appbundle --release && flutter build apk --release

      - name: Read pubspec.yaml Version
        uses: KJ002/read-yaml@1.5
        id: pubspec-data
        with:
          file: 'pubspec.yaml'
          key-path: '["version"]'

      - name: Create Github Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/bundle/release/*.aab,build/app/outputs/flutter-apk/app-release.apk"
          token: ${{ secrets.GH_TOKEN }}
          tag: "Release-${{ steps.pubspec-data.outputs.data }}"

      - name: Save APPBUNDLE to Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: APPBUNDLE
          path: build/app/outputs/bundle/release/app-release.aab

      - name: Send mail
        uses: dawidd6/action-send-mail@v3
        with:
          # Required mail server address:
          server_address: smtp.gmail.com
          # Required mail server port:
          server_port: 465
          # Optional (recommended): mail server username:
          username: ${{secrets.MAIL_USERNAME}}
          # Optional (recommended) mail server password:
          password: ${{secrets.MAIL_PASSWORD}}
          # Required mail subject:
          subject: "New Build is here for ${GITHUB_REPOSITORY} - Release-${{ steps.pubspec-data.outputs.data }}"
          # Required recipients' addresses:
          to: ${{secrets.MAIL_TO}}
          # Required sender full name (address can be skipped):
          from: Ishaq Hassan # <user@example.com>
          # Optional whether this connection use TLS (default is true if server_port is 465)
          secure: true
          # Optional plain body:
          body: "Build job of ${{github.repository}} completed successfully! Download the APK for Release-${{ steps.pubspec-data.outputs.data }} \n ${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/releases/tag/${{ steps.pubspec-data.outputs.data }}"
          # Optional unsigned/invalid certificates allowance:
          ignore_cert: true
          #attachments: build/app/outputs/flutter-apk/app-release.apk
          priority: high

  release_internal:
    name: Release Artifacts to internal track
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Get APPBUNDLE from Artifacts
        uses: actions/download-artifact@v2
        with:
          name: APPBUNDLE
      - name: Release APPBUNDLE to Production track
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAYSTORE_ACCOUNT_KEY }}
          packageName: com.flutter.cicd.test
          releaseFiles: app-release.aab
          track: production
          whatsNewDirectory: distribution/whatsnew
          status: draft
